name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
#   build-macos:
#     name: Build MacOS
#     runs-on: macos-latest
#     steps:
#     - name: Set up Go 1.x
#       uses: actions/setup-go@v2
#       with:
#         go-version: ^1.15
#       id: go
      
#     - name: Output environment variables
#       run: env

#     - name: Check out code into the Go module directory
#       uses: actions/checkout@v2
      
#     - name: Configure AWS Credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: us-east-2
        
#     - name: Copy files to the test website with the AWS CLI
#       run: |
#         aws s3 cp s3://contrast-golang-agent/0.2.1/darwin/amd64/contrast-go ./contrast-go
#         chmod u+x ./contrast-go
      
#     - name: Get dependencies
#       run: |
#         go get -v -t -d ./...

#     - name: Build
#       run: go build -v -o ./bin/mattermost ./cmd/mattermost/ > build-go-normal.log 2>&1
      
#     - name: Build with Contrast - No Dataflow
#       run: ./contrast-go -v -save build -o ./bin/mattermost-contrast-no-dataflow ./cmd/mattermost/ > contrast-build-no-dataflow.log 2>&1
#       continue-on-error: true
      
#     - name: Build with Contrast - With Dataflow
#       run: ./contrast-go -dataflow -v -save build -o ./bin/mattermost-contrast-dataflow ./cmd/mattermost/ > contrast-build-dataflow.log 2>&1
#       continue-on-error: true
    
#     - name: Archive go binaries
#       uses: actions/upload-artifact@v2
#       with:
#         name: binaries
#         path: |
#           bin/mattermost
#           bin/mattermost-instrumented

#   build-windows:
#     name: Build Windows
#     runs-on: windows-latest
#     steps:
#     - name: Set up Go 1.x
#       uses: actions/setup-go@v2
#       with:
#         go-version: ^1.15
#       id: go

#     - name: Check out code into the Go module directory
#       uses: actions/checkout@v2
      
#     - name: Configure AWS Credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: us-east-2
        
#     - name: Copy files to the test website with the AWS CLI
#       run: |
#         aws s3 cp s3://contrast-golang-agent/0.2.1/windows/amd64/contrast-go .\contrast-go
#         echo $Env:Username
#         icacls D:\a\mattermost-server\mattermost-server\contrast-go /grant runneradmin:rx
       
#     - name: Get dependencies
#       run: |
#         go get -v -t -d ./...

#     - name: Build
#       run: go build -v -o ./bin/mattermost ./cmd/mattermost/
      
#     - name: Build with Contrast - No Dataflow
#       run: Start-Process -FilePath "./contrast-go" -ArgumentList "-v -save build -o ./bin/mattermost-contrast-no-dataflow ./cmd/mattermost/"
      
#     - name: Build with Contrast - With Dataflow
#       run: Start-Process -FilePath "./contrast-go" -ArgumentList "-dataflow -v -save build -o ./bin/mattermost-contrast-dataflow ./cmd/mattermost/"
    
#     - name: Archive go binaries
#       uses: actions/upload-artifact@v2
#       with:
#         name: binaries
#         path: |
#           bin/mattermost
#           bin/mattermost-instrumented

  build-ubuntu:
    name: Build Ubuntu
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    
    - name: Configure Environment
      run: |
        echo "CONTRAST_AGENT_VERSION=0.4.0" >> $GITHUB_ENV
        echo "CONTRAST_DEB_VERSION=0.4.0-1~bionic" >> $GITHUB_ENV
        echo "S3_BASE_DIR=s3://contrast-golang-agent/apps/${GITHUB_REPOSITORY}/run-${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV        

    - name: Download the Contrast Agent
      run: |
        curl -L https://contrastsecurity.jfrog.io/artifactory/debian-public/pool/contrast-go_${CONTRAST_DEB_VERSION}_amd64.deb -o contrast-go.deb
        sudo dpkg -i contrast-go.deb
#        curl -L https://pkg.contrastsecurity.com/artifactory/debian-staging/pool/contrast-go_${CONTRAST_DEB_VERSION}_amd64.deb -o contrast-go.deb

        
#     - name: Download the Contrast Agent
#       run: |
#         aws s3 cp s3://contrast-golang-agent/$CONTRAST_AGENT_VERSION/linux/amd64/contrast-go ./contrast-go
#         chmod u+x ./contrast-go
      
    - name: Get Go dependencies
      run: |
        go get -v -t -d ./...

    - name: Build
      run: go build -v -o ./bin/mattermost ./cmd/mattermost/ > build-go-normal.log 2>&1

    - name: Build with Contrast - No Dataflow
      run: contrast-go -v -save build -race -o ./bin/mattermost-no-dataflow ./cmd/mattermost/ > contrast-build-no-dataflow.log 2>&1
      continue-on-error: true
        
    - name: Build with Contrast - With Dataflow
      run: contrast-go -dataflow -v -save build -race -o ./bin/mattermost-dataflow ./cmd/mattermost/ > contrast-build-dataflow.log 2>&1
      continue-on-error: true
    
    - name: Copy Log Files to S3
      run: |
        aws s3 cp ./build-go-normal.log ${S3_BASE_DIR}/logs/build-go-normal.log
        aws s3 cp ./contrast-build-no-dataflow.log ${S3_BASE_DIR}/logs/contrast-build-no-dataflow.log
        aws s3 cp ./contrast-build-dataflow.log ${S3_BASE_DIR}/logs/contrast-build-dataflow.log
    
    - name: Copy Binaries to S3
      run: |
        aws s3 cp ./bin/mattermost ${S3_BASE_DIR}/bin/mattermost
        aws s3 cp ./bin/mattermost-no-dataflow ${S3_BASE_DIR}/bin/mattermost-no-dataflow
        aws s3 cp ./bin/mattermost-dataflow ${S3_BASE_DIR}/bin/mattermost-dataflow\
      continue-on-error: true
        
    - name: Copy Rewritten Source to S3
      run: |
        tar -czvf ./contrast-go-save.tar.gz /tmp/contrast/go/
        aws s3 cp ./contrast-go-save.tar.gz ${S3_BASE_DIR}/save/contrast-go-save.tar.gz
    
    - name: Set Contrast Session Metadata
      run: |
        export CONTRAST__APPLICATION__SESSION_METADATA="commitHash=$GITHUB_SHA,committer=$GITHUB_ACTOR,branchName=$GITHUB_REF,repository=$GITHUB_REPOSITORY,buildNumber=$GITHUB_RUN_NUMBER"
        echo $CONTRAST__APPLICATION__SESSION_METADATA
    
    - name: Contrast Agent Docker Build
      run: |
        echo -e 'FROM scratch\nCOPY ./bin/mattermost-no-dataflow ./mattermost-no-dataflow\nENTRYPOINT ["./mattermost-no-dataflow"]' > Dockerfile-tmp
        docker build . -f Dockerfile-tmp -t mattermost-contrast:latest -t mattermost-contrast:$CONTRAST_AGENT_VERSION
        
#     - name: Archive go binaries
#       uses: actions/upload-artifact@v2
#       with:
#         name: binaries
#         path: |
#           bin/mattermost
#           bin/mattermost-instrumented

#     - name: Test
#       run: go test -v ./bin/mattermost
